saveItem = INSERT INTO public.items (name, description, priority_id, wishlist_id) \
           VALUES (:name, :description, :priority_id, :wishlist_id)

getItemsForWishList = SELECT i.id, i.name, i.priority_id, i.description \
                      FROM items i \
                      WHERE i.wishlist_id = :wishListId

getItemById = SELECT name, priority_id, description, wishlist_id \
              FROM items \
              WHERE id = :itemId

updateItem = UPDATE items \
             SET name=:name, priority_id=:priorityId, description=:description \
             WHERE id = :itemId

copyItem = INSERT INTO public.items (name, description, priority_id, wishlist_id) \
           (SELECT i.name, i.description, i.priority_id, :toWishListId \
           FROM public.items i \
           WHERE id = :itemId)

deleteItem = DELETE FROM items \
             WHERE id = :itemId

getImagesForItem = SELECT image FROM images \
                   WHERE item_id = :itemId

deleteImage = DELETE FROM images \
              WHERE image = :image AND item_id = :itemId

deleteImagesForItem = DELETE FROM images \
                      WHERE item_id = :itemId

saveImage = INSERT INTO public.images (image, item_id) \
            VALUES (:image, :itemId)

getPopularItems = SELECT i.id, i.name, i.wishlist_id, i.priority_id, count(l.user_id) AS likes_count \
                  FROM public.items i \
                  INNER JOIN public.likes l \
                  ON i.id = l.item_id \
                  GROUP BY (i.id, i.name, i.wishlist_id, i.priority_id) \
                  ORDER BY (likes_count) DESC

getBookedItems = SELECT i.id, i.name, i.wishlist_id, i.priority_id \
                 FROM public.items i \
                 INNER JOIN public.bookers b \
                    ON i.id = b.item_id \
                 INNER JOIN public.participants p \
                    ON p.id = b.participant_id \
                 WHERE p.user_id = :userId

getBookingItemsForEvent = SELECT i.id, i.name, i.wishlist_id, i.priority_id \
                          FROM public.items i \
                          INNER JOIN public.wishlists w \
                            ON w.id = i.wishlist_id \
                          INNER JOIN public.bookers b \
                            ON i.id = b.item_id \
                          INNER JOIN public.participants p \
                            ON p.id = b.participant_id \
                          INNER JOIN public.events e \
                            ON e.id = p.event_id \
                          WHERE e.id = :eventId AND e.creator_id = w.user_id

getWeightOfMyTags = SELECT it.tag_id, count(it.tag_id)  AS "tags_count" \
                    FROM public.item_tags it \
                    INNER JOIN public.items i \
                        ON i.id = it.item_id \
                    INNER JOIN public.wishlists w \
                        ON i.wishlist_id = w.id \
                    WHERE w.user_id = :userId \
                    GROUP BY (it.tag_id)

getWeightOfFriendsTags = SELECT it.tag_id, count(it.tag_id) AS "tags_count" \
                         FROM ( \
                            SELECT filter_friend(user_one_id, user_two_id, :userId) AS friend_id \
                            FROM relationships \
                            WHERE (user_one_id = :userId OR user_two_id = :userId) \
                            AND status_id = 1 \
                         ) f \
                         INNER JOIN public.wishlists w \
                            ON w.user_id = f.friend_id \
                         INNER JOIN public.items i \
                            ON i.wishlist_id = w.id \
                         INNER JOIN item_tags it \
                            ON it.item_id = i.id \
                         GROUP BY (it.tag_id)


getWeightOfSystemTags = SELECT it.tag_id, count(it.tag_id)* 100 / (SELECT COUNT(*) FROM item_tags) AS "tags_count" \
                        FROM public.item_tags it \
                        GROUP BY (it.tag_id) \
                        ORDER BY tags_count

getWeightForListOfTags = SELECT it.tag_id, count(it.tag_id)  AS "tags_count" \
                         FROM public.item_tags it \
                         WHERE it.tag_id IN (:tagsList) \
                         GROUP BY (it.tag_id)

getTagWithItem = SELECT i.id, i.name, i.wishlist_id, it.tag_id \
                 FROM item_tags it \
                 INNER JOIN items i \
                 ON i.id = it.item_id \
                 WHERE it.tag_id IN (:tagsIds)

