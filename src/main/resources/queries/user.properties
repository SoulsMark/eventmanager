saveUser = \
  INSERT INTO users (login, password, name, surname, email, birth, phone, sex, image, is_active, reg_date, conf_link) \
  VALUES (:login, :password, :name, :surname, :email, :birth, :phone, :sex, :image, :is_active, :reg_date, :conf_link)

findOneUser = \
  SELECT id, login, password, name, surname, email, birth, phone, sex, image, is_active, reg_date, conf_link \
  FROM users WHERE id = :id

findByUsername = \
  SELECT id, login, password, name, surname, email, birth, phone, sex, image, is_active, reg_date, conf_link \
  FROM users \
  WHERE login = :login

countAllUsers = SELECT count(id) FROM users

findAllUsers = \
  SELECT id, login, password, name, surname, email, birth, phone, sex, image, is_active, reg_date, conf_link \
  FROM users

findAllUsersPagination = \
  SELECT id, login, password, name, surname, email, birth, phone, sex, image, is_active, reg_date, conf_link \
  FROM users \
  LIMIT :limit OFFSET :offset

updateUser = \
  UPDATE users \
  SET login = :login, name = :name, surname = :surname, email = :email, \
  birth = :birth, phone = :phone, sex = :sex, image = :image, is_active = :is_active \
  WHERE id = :id

deleteUser = DELETE FROM users WHERE id = :id

changePassword = UPDATE users SET password=:password WHERE id = :id

changeConfLink = UPDATE users SET conf_link = :conf_link WHERE id = :id

isUsernameExists=SELECT login FROM users WHERE login = :login

isEmailExists=SELECT email FROM users WHERE email = :email

countSearchUserByLoginOrByNameAndSurname = \
  SELECT count(id) \
  FROM users \
  WHERE LOWER(login) LIKE :queryString \
  OR \
  LOWER(CONCAT(name, surname)) LIKE :queryString

searchUserByLoginOrByNameAndSurname = \
  SELECT * \
  FROM users \
  WHERE LOWER(login) LIKE :queryString \
  OR \
  LOWER(CONCAT(name, surname)) LIKE :queryString

findAllActiveUsers = \
  SELECT id, login, password, name, surname, email, birth, phone, sex, image, is_active, reg_date, conf_link \
  FROM users \
  WHERE is_active = true \
  ORDER BY id

findAllActiveUsersPagination = \
  SELECT id, login, password, name, surname, email, birth, phone, sex, image, is_active, reg_date, conf_link \
  FROM users \
  WHERE is_active = true \
  ORDER BY id \
  LIMIT :limit OFFSET :offset

findUserByEmail = \
  SELECT id, login, password, name, surname, email, birth, phone, sex, image, is_active, reg_date, conf_link \
  FROM users WHERE email = :email

#Friends functionality

saveRelationship = INSERT INTO relationships (user_one_id, user_two_id, status_id, action_user_id) \
                     VALUES (:user_one_id, :user_two_id, :status_id, :action_user_id)

updateRelationship = UPDATE relationships \
                     SET user_one_id = :user_one_id, user_two_id = :user_two_id, \
                     status_id = :status_id, action_user_id = :action_user_id \
                     WHERE \
                     (user_one_id = :user_one_id AND user_two_id = :user_two_id) \
                     OR \
                     (user_one_id = :user_two_id AND user_two_id = :user_one_id)

deleteRelationship = DELETE FROM relationships \
                     WHERE \
                     (user_one_id = :user_one_id AND user_two_id = :user_two_id) \
                     OR \
                     (user_one_id = :user_two_id AND user_two_id = :user_one_id)

getFriendsByUserId = SELECT id, login, password, name, surname, email, \
                     birth, phone, sex, image, is_active, reg_date, conf_link \
                     FROM users \
                     WHERE id IN ((SELECT user_two_id \
                                   FROM relationships \
                                   WHERE user_one_id = :user_id \
                                   AND status_id = 1) \
                                  UNION ALL \
                                  (SELECT user_one_id \
                                   FROM relationships \
                                   WHERE user_two_id = :user_id \
                                   AND status_id = 1)) \
                     ORDER BY id

getOutcomingRequests = SELECT id, login, password, name, surname, email, \
                     birth, phone, sex, image, is_active, reg_date, conf_link \
                     FROM users \
                     WHERE id IN ((SELECT user_two_id \
                                   FROM relationships \
                                   WHERE user_one_id = :user_id \
                                   AND action_user_id = :user_id \
                                   AND status_id = 0) \
                                  UNION ALL \
                                  (SELECT user_one_id \
                                   FROM relationships \
                                   WHERE user_two_id = :user_id \
                                   AND action_user_id = :user_id \
                                   AND status_id = 0)) \
                     ORDER BY id

getIncomingRequests = SELECT id, login, password, name, surname, email, \
                     birth, phone, sex, image, is_active, reg_date, conf_link \
                     FROM users \
                     WHERE id IN ((SELECT user_two_id \
                                   FROM relationships \
                                   WHERE user_one_id = :user_id \
                                   AND action_user_id <> :user_id \
                                   AND status_id = 0) \
                                  UNION ALL \
                                  (SELECT user_one_id \
                                   FROM relationships \
                                   WHERE user_two_id = :user_id \
                                   AND action_user_id <> :user_id \
                                   AND status_id = 0)) \
                     ORDER BY id

getRelationshipStatus = SELECT status_name \
                        FROM status \
                        INNER JOIN relationships ON relationships.status_id = status.id \
                        WHERE \
                        (user_one_id = :user_one_id AND user_two_id = :user_two_id) \
                        OR \
                        (user_one_id = :user_two_id AND user_two_id = :user_one_id)

getRelationshipStatusId = SELECT status_id \
                        FROM relationships \
                        WHERE \
                        (user_one_id = :user_one_id AND user_two_id = :user_two_id) \
                        OR \
                        (user_one_id = :user_two_id AND user_two_id = :user_one_id)

getRelationshipStatusAndActiveUserId = SELECT status_name, action_user_id \
                                       FROM status \
                                       INNER JOIN relationships ON relationships.status_id = status.id \
                                       WHERE \
                                       (user_one_id = :user_one_id AND user_two_id = :user_two_id) \
                                       OR \
                                       (user_one_id = :user_two_id AND user_two_id = :user_one_id)

getRelationshipStatusIdAndActiveUserId = SELECT status_id, action_user_id \
                                       FROM relationships \
                                       WHERE \
                                       (user_one_id = :user_one_id AND user_two_id = :user_two_id) \
                                       OR \
                                       (user_one_id = :user_two_id AND user_two_id = :user_one_id)

user.findDisabledUsersForDelete = SELECT id, login, password, name, surname,\
                                  email, birth, phone, sex, image, is_active, reg_date, conf_link \
                                  FROM users WHERE is_active = false AND \
                                  DATE_PART('day', clock_timestamp()::timestamp - reg_date::timestamp) * 24 + \
                                  DATE_PART('hour', clock_timestamp()::timestamp - reg_date::timestamp) > 24